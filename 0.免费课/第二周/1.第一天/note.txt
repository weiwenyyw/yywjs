 1.方法的作用
 2.数组方法的返回值
 3.方法的传入的参数
 4.原有的数组是否发生改变

 1.pop
    1.删除数组的最后一项
    2.返回值是删除数组的那一项的值
    3.不需要传入参数
    4.原有的数组发生改变
 2.push
    1.向数组的末尾添加一项
    2.新增成员之后的数组的长度
    3.可以传入一到多个参数，并有逗号隔开
    4.原有数组发生变化
 3.shift
    1.删除数组的第一项
    2.返回值是删除的那一项的值
    3.不需要传入参数
    4.原有数组发生改变
 4.unshift
    1.新增数组第一项
    2.返回数组最新的长度
    3.传入移到多个参数，并有逗号隔开
    4.原有数组发生变化
 5.splice

    1.splice(m,n),从数组索引m开始，删除n项
    2.返回一个数组，数组包含了删除的那几项
    3.两个参数m,n
    4.原有数组发生改变
    三个参数:替换、修改、新增
    1.splice(m,n,z) 从索引m开始，删除n项，用z替代
    2.返回一个数组，数组包含了删除的那几项
    3.参数m，n,z
    4.原有数组发生改变
    splice(m,0,z) 从索引m开始，删除零项，新增z
 6.slice
    1.数组的截取slice(m,n),[m<n]从索引m开始，截取到索引n并且不包含索引n的那一项（前包后不包）[m>=n]返回一个空数组
    2.方法的返回值是截取的数组
    3.两个参数m,n(如果只有一个参数，那就是从索引m开始，截取到数组末尾)
    4.原有的数组不发生改变
    注： m<0  n<0,从数组的最后一项，往前依次数
 7.concat
    1.数组的克隆，把两个数组组合一个数组;
    2.返回一个组合后的数组
    3.数组或者其他数据，要组合的数组成员
    4.原有的数组不发生变化\
 8.join
    1.按照特定的字符把数组中的每一项连接起来，并返回一个字符串
    2.返回一个字符串
    3.把数组按照什么字符连接（+、-、&）
    4.原有数组不变
 9.sort
    1.数组中对数字对象排序
    2.返回一个排序后的数组
    3.10以内排序不需要参数，10以上排序（1.从小到大）sort(function(a,b){return a-b})  2.从大到小： sort(function(a,b){return b-a})
    4.原有数组发生变化
 10.reverse
    1.让数组每一个成员顺序倒过来
    2.返回一个倒序数组
    3.不需要传入参数
    4.原有数组发生变化
 11.indexOf
    1.检测当前数组成员第一次出现的索引
    2.返回当前数组成员的索引（如果数组中不存在这一项，返回-1）
    3.要检测的那一个数组项
    4.原有数组不发生变化
 12.lastIndexOf
    1.检测当前数组成员最后一次出现的索引
    2.返回当前数组成员的索引（如果数组中不存在这一项，返回-1）
    3.要检测的那一个数组项
    4.原有数组不发生变化
 13.map
    1.遍历数组每一项
    3.ary.map(function(item,index){})
    4.原有数组不发生变化
 14.forEach
    1.遍历数组每一项
    3.ary.forEach(function(item,index){})
    4.原有数组不发生变化






